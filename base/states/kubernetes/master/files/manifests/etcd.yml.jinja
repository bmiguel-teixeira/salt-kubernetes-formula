{%- from "kubernetes/map.jinja" import common with context %}
{%- set nodename = grains.get('nodename')  %}
{%- set internal_ip = grains.get('ipv4')[0] %}

apiVersion: "v1"
kind: "Pod"
metadata:
  name: "kube-etcd"
  namespace: "kube-system"
spec: 
  hostNetwork: true
  containers: 
    - name: "etcd"
      restartPolicy: Never
      image: "quay.io/coreos/etcd:v3.1.0"
      command: 
        - "/usr/local/bin/etcd"
        - "--name"
        - "{{nodename}}"
        - "--cert-file=/etc/etcd/api.crt"
        - "--key-file=/etc/etcd/api.key"
        - "--peer-cert-file=/etc/etcd/api.crt"
        - "--peer-key-file=/etc/etcd/api.key"
        - "--trusted-ca-file=/etc/etcd/ca.crt"
        - "--peer-trusted-ca-file=/etc/etcd/ca.crt"
        - "--peer-client-cert-auth"
        - "--client-cert-auth"
        - "--initial-advertise-peer-urls"
        - "https://{{internal_ip}}:2380"
        - "--listen-peer-urls=https://0.0.0.0:2380"
        - "--listen-client-urls=https://0.0.0.0:2379"
        - "--advertise-client-urls=https://{{internal_ip}}:2379"
        - "--initial-cluster-token"
        - "etcd-cluster-0"
        - "--initial-cluster"
        - "{{controllers | join(',')}}"
        - "--initial-cluster-state"
        - "new"
        - "--data-dir=/var/lib/etcd"
      volumeMounts:
        - name: "etc-etcd"
          mountPath: "/etc/etcd"
  volumes:
    - name: "etc-etcd"
      hostPath:
        path: "{{common.certs_path}}"